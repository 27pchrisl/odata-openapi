{
    "openapi": "3.0.0",
    "info": {
        "title": "OData Service for namespace PeopleService",
        "version": "",
        "description": "This OData service is located at [http://localhost/People.svc/](http://localhost/People.svc/)\n\n## Entity Data Model\n![ER Diagram](http://yuml.me/diagram/class/[Supplier{bg:orange}],[Supplier]-0..1>[Address],[Supplier]-*>[ProductService.Product{bg:whitesmoke}],[Address],[Person{bg:orange}],[Person]-0..1>[PersonDetail],[Person]^[Customer{bg:orange}],[Person]^[Employee{bg:orange}],[PersonDetail{bg:orange}],[PersonDetail]-0..1>[Address],[PersonDetail]-0..1>[Person])\n\n## References\n- [ProductService](?url=https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/Products.openapi3.json)"
    },
    "servers": [
        {
            "url": "http://localhost/People.svc"
        }
    ],
    "tags": [
        {
            "name": "Suppliers"
        },
        {
            "name": "People"
        },
        {
            "name": "PersonDetails"
        }
    ],
    "paths": {
        "/Suppliers": {
            "get": {
                "summary": "Get entities from Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc",
                                    "Name",
                                    "Name desc",
                                    "Address",
                                    "Address desc",
                                    "Location",
                                    "Location desc",
                                    "Concurrency",
                                    "Concurrency desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Name",
                                    "Address",
                                    "Location",
                                    "Concurrency"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Collection of Supplier",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PeopleService.Supplier"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PeopleService.Supplier-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.Supplier"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Suppliers({ID})": {
            "get": {
                "summary": "Get entity from Suppliers by key",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Name",
                                    "Address",
                                    "Location",
                                    "Concurrency"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.Supplier"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PeopleService.Supplier-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/People": {
            "get": {
                "summary": "Get entities from People",
                "tags": [
                    "People"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc",
                                    "Name",
                                    "Name desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Name"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "PersonDetail"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Collection of Person",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PeopleService.Person"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to People",
                "tags": [
                    "People"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PeopleService.Person-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.Person"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/People({ID})": {
            "get": {
                "summary": "Get entity from People by key",
                "tags": [
                    "People"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Name"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "PersonDetail"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.Person"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in People",
                "tags": [
                    "People"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PeopleService.Person-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from People",
                "tags": [
                    "People"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/PersonDetails": {
            "get": {
                "summary": "Get entities from PersonDetails",
                "tags": [
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "PersonID",
                                    "PersonID desc",
                                    "Age",
                                    "Age desc",
                                    "Gender",
                                    "Gender desc",
                                    "Phone",
                                    "Phone desc",
                                    "Address",
                                    "Address desc",
                                    "Photo",
                                    "Photo desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "PersonID",
                                    "Age",
                                    "Gender",
                                    "Phone",
                                    "Address",
                                    "Photo"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Person"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Collection of PersonDetail",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PeopleService.PersonDetail"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to PersonDetails",
                "tags": [
                    "PersonDetails"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PeopleService.PersonDetail-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.PersonDetail"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/PersonDetails({PersonID})": {
            "get": {
                "summary": "Get entity from PersonDetails by key",
                "tags": [
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "name": "PersonID",
                        "in": "path",
                        "required": true,
                        "description": "key: PersonID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "PersonID",
                                    "Age",
                                    "Gender",
                                    "Phone",
                                    "Address",
                                    "Photo"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Person"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.PersonDetail"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in PersonDetails",
                "tags": [
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "name": "PersonID",
                        "in": "path",
                        "required": true,
                        "description": "key: PersonID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PeopleService.PersonDetail-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from PersonDetails",
                "tags": [
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "name": "PersonID",
                        "in": "path",
                        "required": true,
                        "description": "key: PersonID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PeopleService.Supplier": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "Address": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Address"
                            }
                        ]
                    },
                    "Location": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.GeographyPoint"
                            }
                        ]
                    },
                    "Concurrency": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Products": {
                        "type": "array",
                        "items": {
                            "$ref": "./Products.openapi3.json#/components/schemas/ProductService.Product"
                        }
                    }
                },
                "title": "Supplier"
            },
            "PeopleService.Supplier-create": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "Address": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Address-create"
                            }
                        ]
                    },
                    "Location": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.GeographyPoint"
                            }
                        ]
                    },
                    "Concurrency": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Products": {
                        "type": "array",
                        "items": {
                            "$ref": "./Products.openapi3.json#/components/schemas/ProductService.Product"
                        }
                    }
                },
                "title": "Supplier (for create)"
            },
            "PeopleService.Supplier-update": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "Address": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Address"
                            }
                        ]
                    },
                    "Location": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.GeographyPoint"
                            }
                        ]
                    },
                    "Concurrency": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "title": "Supplier (for update)"
            },
            "PeopleService.Address": {
                "type": "object",
                "properties": {
                    "Street": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "City": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "State": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "ZipCode": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "Country": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    }
                },
                "title": "Address"
            },
            "PeopleService.Address-create": {
                "type": "object",
                "properties": {
                    "Street": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "City": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "State": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "ZipCode": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "Country": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    }
                },
                "title": "Address (for create)"
            },
            "PeopleService.Address-update": {
                "type": "object",
                "properties": {
                    "Street": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "City": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "State": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "ZipCode": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "Country": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    }
                },
                "title": "Address (for update)"
            },
            "PeopleService.Person": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "PersonDetail": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.PersonDetail"
                            }
                        ]
                    }
                },
                "title": "Person"
            },
            "PeopleService.Person-create": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "PersonDetail": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.PersonDetail-create"
                            }
                        ]
                    }
                },
                "title": "Person (for create)"
            },
            "PeopleService.Person-update": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    }
                },
                "title": "Person (for update)"
            },
            "PeopleService.Customer": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PeopleService.Person"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "TotalExpense": {
                                "anyOf": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "format": "decimal",
                                "multipleOf": 1
                            }
                        }
                    }
                ],
                "title": "Customer"
            },
            "PeopleService.Customer-create": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PeopleService.Person-create"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "TotalExpense": {
                                "anyOf": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "format": "decimal",
                                "multipleOf": 1
                            }
                        }
                    }
                ],
                "title": "Customer (for create)"
            },
            "PeopleService.Customer-update": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PeopleService.Person-update"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "TotalExpense": {
                                "anyOf": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "format": "decimal",
                                "multipleOf": 1
                            }
                        }
                    }
                ],
                "title": "Customer (for update)"
            },
            "PeopleService.Employee": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PeopleService.Person"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "EmployeeID": {
                                "anyOf": [
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "format": "int64",
                                "example": "42"
                            },
                            "HireDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2017-04-13T15:51:04Z"
                            },
                            "Salary": {
                                "anyOf": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "format": "float",
                                "example": 3.14
                            }
                        }
                    }
                ],
                "title": "Employee"
            },
            "PeopleService.Employee-create": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PeopleService.Person-create"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "EmployeeID": {
                                "anyOf": [
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "format": "int64",
                                "example": "42"
                            },
                            "HireDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2017-04-13T15:51:04Z"
                            },
                            "Salary": {
                                "anyOf": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "format": "float",
                                "example": 3.14
                            }
                        }
                    }
                ],
                "title": "Employee (for create)"
            },
            "PeopleService.Employee-update": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PeopleService.Person-update"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "EmployeeID": {
                                "anyOf": [
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "format": "int64",
                                "example": "42"
                            },
                            "HireDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2017-04-13T15:51:04Z"
                            },
                            "Salary": {
                                "anyOf": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "format": "float",
                                "example": 3.14
                            }
                        }
                    }
                ],
                "title": "Employee (for update)"
            },
            "PeopleService.PersonDetail": {
                "type": "object",
                "properties": {
                    "PersonID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Age": {
                        "type": "integer",
                        "format": "uint8"
                    },
                    "Gender": {
                        "type": "boolean"
                    },
                    "Phone": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "Address": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Address"
                            }
                        ]
                    },
                    "Photo": {
                        "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.Stream"
                    },
                    "Person": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Person"
                            }
                        ]
                    }
                },
                "title": "PersonDetail"
            },
            "PeopleService.PersonDetail-create": {
                "type": "object",
                "properties": {
                    "PersonID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Age": {
                        "type": "integer",
                        "format": "uint8"
                    },
                    "Gender": {
                        "type": "boolean"
                    },
                    "Phone": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "Address": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Address-create"
                            }
                        ]
                    },
                    "Photo": {
                        "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.Stream"
                    },
                    "Person": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Person-create"
                            }
                        ]
                    }
                },
                "title": "PersonDetail (for create)"
            },
            "PeopleService.PersonDetail-update": {
                "type": "object",
                "properties": {
                    "Age": {
                        "type": "integer",
                        "format": "uint8"
                    },
                    "Gender": {
                        "type": "boolean"
                    },
                    "Phone": {
                        "type": "string",
                        "nullable": true,
                        "example": "string"
                    },
                    "Address": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Address"
                            }
                        ]
                    },
                    "Photo": {
                        "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.Stream"
                    }
                },
                "title": "PersonDetail (for update)"
            },
            "odata.error": {
                "type": "object",
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/odata.error.main"
                    }
                }
            },
            "odata.error.main": {
                "type": "object",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/odata.error.detail"
                        }
                    },
                    "innererror": {
                        "type": "object",
                        "description": "The structure of this object is service-specific"
                    }
                }
            },
            "odata.error.detail": {
                "type": "object",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    }
                }
            }
        },
        "parameters": {
            "top": {
                "name": "$top",
                "in": "query",
                "description": "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                },
                "example": 50
            },
            "skip": {
                "name": "$skip",
                "in": "query",
                "description": "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                }
            },
            "count": {
                "name": "$count",
                "in": "query",
                "description": "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)",
                "schema": {
                    "type": "boolean"
                }
            },
            "filter": {
                "name": "$filter",
                "in": "query",
                "description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)",
                "schema": {
                    "type": "string"
                }
            },
            "search": {
                "name": "$search",
                "in": "query",
                "description": "Search items by search phrases, see [OData Searching](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374633)",
                "schema": {
                    "type": "string"
                }
            }
        },
        "responses": {
            "error": {
                "description": "Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/odata.error"
                        }
                    }
                }
            }
        }
    }
}
