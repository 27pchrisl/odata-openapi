{
    "openapi": "3.0.0",
    "info": {
        "title": "Examples from Part 3: CSDL",
        "version": "",
        "description": "This OData service is located at http://localhost/service-root/\n\n## Entity Data Model\n![ER Diagram](http://yuml.me/diagram/class/[Product],[Product]-0..1>[Category],[Product]-0..1>[Supplier],[Supplier],[Customer],[Order],[Category],[Category]-*>[Product],[Employee],[Employee]-0..1>[Manager],[Employee]^[Manager],[Manager]-*>[Employee],[Category17],[Category18],[OrderLine],[Product22],[ShipmentBox],[Product2],[Weird],[City],[Region],[Country],[Planet],[Order],[FriendType])\n\n## References\n- [Org.OData.Core.V1](https://github.com/oasis-tcs/odata-vocabularies/blob/master/vocabularies/Org.OData.Core.V1.md)\n- [Org.OData.Measures.V1](https://github.com/oasis-tcs/odata-vocabularies/blob/master/vocabularies/Org.OData.Measures.V1.md)\n- [Org.OData.Validation.V1](https://github.com/oasis-tcs/odata-vocabularies/blob/master/vocabularies/Org.OData.Validation.V1.md)\n- [Org.OData.Capabilities.V1](https://github.com/oasis-tcs/odata-vocabularies/blob/master/vocabularies/Org.OData.Capabilities.V1.md)\n- [org.example.Display](http://petstore.swagger.io/?url=http://vocabs.odata.org/display/v1)\n- [anotherOne](http://petstore.swagger.io/?url=http://vocabs.odata.org/display/v1)"
    },
    "servers": [
        {
            "url": "http://localhost/service-root"
        }
    ],
    "tags": [
        {
            "name": "StandardCustomers"
        },
        {
            "name": "PreferredCustomers"
        },
        {
            "name": "Orders"
        },
        {
            "name": "Products"
        },
        {
            "name": "Categories"
        },
        {
            "name": "Suppliers"
        },
        {
            "name": "MainSupplier"
        },
        {
            "name": "Categories34"
        },
        {
            "name": "Categories35"
        }
    ],
    "paths": {
        "/StandardCustomers": {
            "get": {
                "summary": "Get entities from StandardCustomers",
                "tags": [
                    "StandardCustomers"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Collection of Customer",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Customer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to StandardCustomers",
                "tags": [
                    "StandardCustomers"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Customer"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/StandardCustomers('{ID}')": {
            "get": {
                "summary": "Get entity from StandardCustomers by key",
                "tags": [
                    "StandardCustomers"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Customer"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in StandardCustomers",
                "tags": [
                    "StandardCustomers"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from StandardCustomers",
                "tags": [
                    "StandardCustomers"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/PreferredCustomers": {
            "get": {
                "summary": "Get entities from PreferredCustomers",
                "tags": [
                    "PreferredCustomers"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Collection of Customer",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Customer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to PreferredCustomers",
                "tags": [
                    "PreferredCustomers"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Customer"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/PreferredCustomers('{ID}')": {
            "get": {
                "summary": "Get entity from PreferredCustomers by key",
                "tags": [
                    "PreferredCustomers"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Customer"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in PreferredCustomers",
                "tags": [
                    "PreferredCustomers"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from PreferredCustomers",
                "tags": [
                    "PreferredCustomers"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Orders": {
            "get": {
                "summary": "Get entities from Orders",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Collection of Order",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Order"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Orders",
                "tags": [
                    "Orders"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Order"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Order"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Orders({ID})": {
            "get": {
                "summary": "Get entity from Orders by key",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Order"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Orders",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Order"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Orders",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/TopSellingProducts(Year='{Year}')": {
            "get": {
                "summary": "Invoke function TopSellingProducts",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "Year",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "number"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "format": "decimal",
                            "multipleOf": 1,
                            "minimum": -9999,
                            "maximum": 9999
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Result",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Products": {
            "get": {
                "summary": "Get entities from Products",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc",
                                    "CategoryID",
                                    "CategoryID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "CategoryID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Category",
                                    "Supplier"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Collection of Product",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Products",
                "tags": [
                    "Products"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Product"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Product"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Products('{ID}')": {
            "get": {
                "summary": "Get entity from Products by key",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "CategoryID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Category",
                                    "Supplier"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Product"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Products",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Product"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Products",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories": {
            "get": {
                "summary": "Get entities from Categories",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Collection of Category",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Categories",
                "tags": [
                    "Categories"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Category"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories('{ID}')": {
            "get": {
                "summary": "Get entity from Categories by key",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Categories",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Category"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Categories",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Suppliers": {
            "get": {
                "summary": "Get entities from Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Collection of Supplier",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Supplier"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Supplier"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Supplier"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Suppliers('{ID}')": {
            "get": {
                "summary": "Get entity from Suppliers by key",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Supplier"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Supplier"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/MainSupplier": {
            "get": {
                "summary": "Get MainSupplier",
                "tags": [
                    "MainSupplier"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Supplier"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update MainSupplier",
                "tags": [
                    "MainSupplier"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Supplier"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/LeaveRequestApproval": {
            "post": {
                "summary": "Invoke action LeaveRequestApproval",
                "tags": [
                    "Service Operations"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/ProductsByRating(Rating='{Rating}')": {
            "get": {
                "summary": "Invoke function ProductsByRating",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "Rating",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "number"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "format": "decimal",
                            "multipleOf": 1,
                            "minimum": -9999,
                            "maximum": 9999
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Result",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories34": {
            "get": {
                "summary": "Get entities from Categories34",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Collection of Category",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Categories34",
                "tags": [
                    "Categories34"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Category"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories34('{ID}')": {
            "get": {
                "summary": "Get entity from Categories34 by key",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Categories34",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Category"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Categories34",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories35": {
            "get": {
                "summary": "Get entities from Categories35",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Collection of Category",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Categories35",
                "tags": [
                    "Categories35"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Category"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories35('{ID}')": {
            "get": {
                "summary": "Get entity from Categories35 by key",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Categories35",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Category"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Categories35",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "org.example.Measurement": {
                "type": "object",
                "properties": {
                    "Dimension": {
                        "type": "string",
                        "maxLength": 50,
                        "default": "Unspecified"
                    },
                    "Length": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "multipleOf": 1.0e-2
                    }
                },
                "title": "Measurement"
            },
            "org.example.Example7to11": {
                "type": "object",
                "properties": {
                    "Units": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "SuggestedTimes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-04-13T15:51:04Z"
                        }
                    },
                    "Amount9": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true,
                        "format": "decimal",
                        "multipleOf": 1.0e-2,
                        "minimum": -9.99,
                        "maximum": 9.99,
                        "example": 9.99
                    },
                    "Amount11": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true,
                        "format": "decimal",
                        "minimum": -999,
                        "maximum": 999,
                        "example": 999
                    }
                },
                "title": "Example7to11"
            },
            "org.example.Product": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "CategoryID": {
                        "type": "string"
                    },
                    "Category": {
                        "$ref": "#/components/schemas/org.example.Category"
                    },
                    "Supplier": {
                        "$ref": "#/components/schemas/org.example.Supplier"
                    }
                },
                "title": "Product"
            },
            "org.example.Supplier": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    }
                },
                "title": "Supplier"
            },
            "org.example.Customer": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    }
                },
                "title": "Customer"
            },
            "org.example.Order": {
                "type": "object",
                "properties": {
                    "ID": {
                        "oneOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64"
                    }
                },
                "title": "Order"
            },
            "org.example.Category": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/org.example.Product"
                        }
                    }
                },
                "title": "Category"
            },
            "org.example.Employee": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "FirstName": {
                        "type": "string"
                    },
                    "LastName": {
                        "type": "string"
                    },
                    "Manager": {
                        "$ref": "#/components/schemas/org.example.Manager"
                    }
                },
                "title": "Employee"
            },
            "org.example.Manager": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/org.example.Employee"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "AnnualBudget": {
                                "oneOf": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "nullable": true,
                                "format": "decimal",
                                "multipleOf": 1
                            },
                            "Employees": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/org.example.Employee"
                                }
                            }
                        },
                        "title": "Manager"
                    }
                ]
            },
            "org.example.Category17": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "title": "Category17"
            },
            "org.example.Category18": {
                "type": "object",
                "properties": {
                    "Info": {
                        "$ref": "#/components/schemas/org.example.EntityInfo"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "title": "Category18"
            },
            "org.example.EntityInfo": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Created": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z"
                    }
                },
                "title": "EntityInfo"
            },
            "org.example.OrderLine": {
                "type": "object",
                "properties": {
                    "OrderID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LineNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "title": "OrderLine"
            },
            "org.example.Dimensions": {
                "type": "object",
                "properties": {
                    "Height": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "multipleOf": 1
                    },
                    "Weight": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "multipleOf": 1
                    },
                    "Length": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "multipleOf": 1
                    }
                },
                "title": "Dimensions"
            },
            "org.example.Product22": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "ProductDimensions": {
                        "$ref": "#/components/schemas/org.example.Dimensions"
                    },
                    "ShippingDimensions": {
                        "$ref": "#/components/schemas/org.example.Dimensions"
                    }
                },
                "title": "Product22"
            },
            "org.example.ShipmentBox": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Dimensions": {
                        "$ref": "#/components/schemas/org.example.Dimensions"
                    }
                },
                "title": "ShipmentBox"
            },
            "org.example.FileAccess": {
                "type": "string",
                "enum": [
                    "Read",
                    "Write",
                    "Create",
                    "Delete"
                ],
                "title": "FileAccess"
            },
            "org.example.ShippingMethod": {
                "type": "string",
                "enum": [
                    "FirstClass",
                    "TwoDay",
                    "Overnight"
                ],
                "title": "ShippingMethod",
                "description": "Method of shipping"
            },
            "org.example.Pattern": {
                "type": "string",
                "enum": [
                    "Plain",
                    "Red",
                    "Blue",
                    "Yellow",
                    "Solid",
                    "Striped",
                    "SolidRed",
                    "SolidBlue",
                    "SolidYellow",
                    "RedBlueStriped",
                    "RedYellowStriped",
                    "BlueYellowStriped"
                ],
                "title": "Pattern"
            },
            "org.example.Length": {
                "type": "integer",
                "format": "int32",
                "title": "Length"
            },
            "org.example.Weight": {
                "type": "integer",
                "format": "int32",
                "title": "Weight"
            },
            "org.example.Size": {
                "type": "object",
                "properties": {
                    "Height": {
                        "$ref": "#/components/schemas/org.example.Length"
                    },
                    "Weight": {
                        "$ref": "#/components/schemas/org.example.Weight"
                    }
                },
                "title": "Size"
            },
            "odata.error": {
                "type": "object",
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/odata.error.main"
                    }
                }
            },
            "odata.error.main": {
                "type": "object",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/odata.error.detail"
                        }
                    },
                    "innererror": {
                        "type": "object",
                        "description": "The structure of this object is service-specific"
                    }
                }
            },
            "odata.error.detail": {
                "type": "object",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    }
                }
            },
            "org.example.Product2": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "title": "Product2"
            },
            "Model1.NullablePrimitiveTypes": {
                "type": "object",
                "properties": {
                    "NullValue": {
                        "type": "boolean",
                        "nullable": true,
                        "default": null
                    },
                    "TrueValue": {
                        "type": "boolean",
                        "nullable": true,
                        "default": true
                    },
                    "FalseValue": {
                        "type": "boolean",
                        "nullable": true,
                        "default": false
                    },
                    "BinaryValue": {
                        "type": "string",
                        "nullable": true,
                        "format": "base64url",
                        "maxLength": 31,
                        "default": "T0RhdGE"
                    },
                    "IntegerValue": {
                        "type": "integer",
                        "nullable": true,
                        "format": "int32",
                        "default": -128
                    },
                    "DoubleValue": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true,
                        "format": "double",
                        "example": 3.14,
                        "default": 3.1415926535897931
                    },
                    "SingleValue": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true,
                        "format": "float",
                        "example": 3.14
                    },
                    "DecimalValue": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true,
                        "format": "decimal",
                        "default": 34.95
                    },
                    "StringValue": {
                        "type": "string",
                        "nullable": true,
                        "default": "Say \"Hello\",\nthen go"
                    },
                    "DateValue": {
                        "type": "string",
                        "nullable": true,
                        "format": "date",
                        "example": "2017-04-13",
                        "default": "2012-12-03"
                    },
                    "DateTimeOffsetValue": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "default": "2012-12-03T07:16:23Z"
                    },
                    "DurationValue": {
                        "type": "string",
                        "nullable": true,
                        "format": "duration",
                        "example": "P4DT15H51M04.217S",
                        "default": "P12DT23H59M59.999999999999S"
                    },
                    "TimeOfDayValue": {
                        "type": "string",
                        "nullable": true,
                        "format": "time",
                        "example": "15:51:04",
                        "default": "07:59:59.999"
                    },
                    "GuidValue": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid",
                        "example": "01234567-89ab-cdef-0123-456789abcdef",
                        "default": "01234567-89ab-cdef-0123-456789abcdef"
                    },
                    "Int64Value": {
                        "oneOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true,
                        "format": "int64",
                        "default": 0
                    },
                    "ColorEnumValue": {
                        "$ref": "#/components/schemas/Model1.Color",
                        "default": "yellow"
                    },
                    "GeographyPoint": {
                        "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.GeographyPoint",
                        "default": "SRID=0;Point(142.1 64.1)"
                    },
                    "StreamValue": {
                        "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.Stream"
                    },
                    "TypeDefValue": {
                        "$ref": "#/components/schemas/Model1.IntegerDecimal",
                        "default": 42
                    },
                    "PrimitiveValue": {
                        "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.PrimitiveType"
                    }
                },
                "title": "NullablePrimitiveTypes"
            },
            "Model1.NonNullablePrimitiveTypes": {
                "type": "object",
                "properties": {
                    "NullValue": {
                        "type": "boolean",
                        "default": null
                    },
                    "TrueValue": {
                        "type": "boolean",
                        "default": true
                    },
                    "FalseValue": {
                        "type": "boolean",
                        "default": false
                    },
                    "BinaryValue": {
                        "type": "string",
                        "format": "base64url",
                        "maxLength": 31,
                        "default": "T0RhdGE"
                    },
                    "IntegerValue": {
                        "type": "integer",
                        "format": "int32",
                        "default": -128
                    },
                    "DoubleValue": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "double",
                        "example": 3.14,
                        "default": 3.1415926535897931
                    },
                    "SingleValue": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "float",
                        "example": 3.14,
                        "default": "-INF"
                    },
                    "DecimalValue": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "default": 34.95
                    },
                    "StringValue": {
                        "type": "string",
                        "default": "Say \"Hello\",\nthen go"
                    },
                    "DateValue": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-04-13",
                        "default": "2012-12-03"
                    },
                    "DateTimeOffsetValue": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "default": "2012-12-03T07:16:23Z"
                    },
                    "DurationValue": {
                        "type": "string",
                        "format": "duration",
                        "example": "P4DT15H51M04.217S",
                        "default": "P12DT23H59M59.999999999999S"
                    },
                    "TimeOfDayValue": {
                        "type": "string",
                        "format": "time",
                        "example": "15:51:04",
                        "default": "07:59:59.999"
                    },
                    "GuidValue": {
                        "type": "string",
                        "format": "uuid",
                        "example": "01234567-89ab-cdef-0123-456789abcdef",
                        "default": "01234567-89ab-cdef-0123-456789abcdef"
                    },
                    "Int64Value": {
                        "oneOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "default": 0
                    },
                    "ColorEnumValue": {
                        "$ref": "#/components/schemas/Model1.Color",
                        "default": "yellow"
                    },
                    "GeographyPoint": {
                        "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.GeographyPoint",
                        "default": "SRID=0;Point(142.1 64.1)"
                    },
                    "StreamValue": {
                        "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.Stream"
                    },
                    "TypeDefValue": {
                        "$ref": "#/components/schemas/Model1.IntegerDecimal",
                        "default": 42
                    },
                    "TextValue": {
                        "$ref": "#/components/schemas/Model1.Text",
                        "maxLength": 60,
                        "default": "42"
                    },
                    "PrimitiveValue": {
                        "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.PrimitiveType"
                    }
                },
                "title": "NonNullablePrimitiveTypes"
            },
            "Model1.Size": {
                "type": "string",
                "enum": [
                    "S",
                    "M",
                    "L"
                ],
                "title": "Size",
                "description": "T-Shirt Size  \nSize, expressed with letters familiar from e.g. T-Shirt sizes"
            },
            "Model1.Color": {
                "type": "string",
                "enum": [
                    "Yellow",
                    "Striped"
                ],
                "title": "Color"
            },
            "Model1.Weird": {
                "type": "object",
                "properties": {
                    "TheKey": {
                        "type": "string"
                    },
                    "TheValue": {
                        "type": "string",
                        "nullable": true
                    },
                    "TheString": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 20
                    },
                    "Tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "Dates": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true,
                            "format": "date",
                            "example": "2017-04-13"
                        }
                    },
                    "Price": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true,
                        "format": "decimal",
                        "multipleOf": 1.0e-3,
                        "minimum": -999999999999.999,
                        "maximum": 999999999999.999,
                        "example": 999999999999.999
                    },
                    "Permission": {
                        "$ref": "http://localhost/vocabularies/Org.OData.Core.V1.openapi3.json#/components/schemas/Org.OData.Core.V1.Permission"
                    },
                    "AliasPermission": {
                        "$ref": "http://localhost/vocabularies/Org.OData.Core.V1.openapi3.json#/components/schemas/Org.OData.Core.V1.Permission"
                    }
                },
                "title": "Weird"
            },
            "Model1.Address": {
                "type": "object",
                "properties": {
                    "Street": {
                        "type": "string",
                        "nullable": true
                    },
                    "City": {
                        "$ref": "#/components/schemas/Model1.City"
                    },
                    "Region": {
                        "$ref": "#/components/schemas/Model1.Region"
                    },
                    "Country": {
                        "$ref": "#/components/schemas/Model1.Country"
                    },
                    "MapLocation": {
                        "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.GeographyPoint"
                    },
                    "Numbers": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int16"
                        }
                    }
                },
                "title": "Address"
            },
            "Model1.City": {
                "type": "object",
                "title": "City"
            },
            "Model1.Region": {
                "type": "object",
                "title": "Region"
            },
            "Model1.Country": {
                "type": "object",
                "title": "Country"
            },
            "Model1.Planet": {
                "type": "object",
                "title": "Planet"
            },
            "Model1.NavigationOnly": {
                "type": "object",
                "properties": {
                    "Planet": {
                        "$ref": "#/components/schemas/Model1.Planet"
                    }
                },
                "title": "NavigationOnly"
            },
            "Model1.AnnotationOnly": {
                "type": "object",
                "title": "AnnotationOnly"
            },
            "Model1.Order": {
                "type": "object",
                "properties": {
                    "Quantity": {
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true,
                        "format": "decimal",
                        "multipleOf": 1
                    },
                    "ShippingUnit": {
                        "type": "string",
                        "nullable": true,
                        "description": "Contains the unit for property Quantity"
                    }
                },
                "title": "Order"
            },
            "Model1.SpecialByte": {
                "type": "integer",
                "format": "uint8",
                "title": "SpecialByte"
            },
            "Model1.Text50": {
                "type": "string",
                "maxLength": 50,
                "title": "Text50"
            },
            "Model1.Text": {
                "type": "string",
                "title": "Text"
            },
            "Model1.LanguageDependentText": {
                "type": "string",
                "title": "LanguageDependentText"
            },
            "Model1.IntegerDecimal": {
                "oneOf": [
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    }
                ],
                "format": "decimal",
                "multipleOf": 1,
                "title": "IntegerDecimal",
                "description": "A decimal without fractional part"
            },
            "Model1.IntegerDecimal10": {
                "oneOf": [
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    }
                ],
                "format": "decimal",
                "multipleOf": 1,
                "minimum": -9999999999,
                "maximum": 9999999999,
                "example": 9999999999,
                "title": "IntegerDecimal10",
                "description": "A ten-digit integer"
            },
            "Model1.VariableDecimal": {
                "oneOf": [
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    }
                ],
                "format": "decimal",
                "title": "VariableDecimal",
                "description": "A floating decimal"
            },
            "Model1.ExactTimestamp": {
                "type": "string",
                "format": "date-time",
                "example": "2017-04-13T15:51:04Z",
                "title": "ExactTimestamp"
            },
            "X.PersonType": {
                "type": "object",
                "title": "PersonType"
            },
            "X.MovieType": {
                "type": "object",
                "title": "MovieType"
            },
            "X.FriendType": {
                "type": "object",
                "title": "FriendType"
            },
            "Y.DeveloperType": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/X.PersonType"
                    },
                    {
                        "type": "object",
                        "title": "DeveloperType"
                    }
                ]
            },
            "Y.ScrumTeamType": {
                "type": "object",
                "properties": {
                    "ScrumMaster": {
                        "$ref": "#/components/schemas/Y.DeveloperType"
                    }
                },
                "title": "ScrumTeamType"
            },
            "Y.ArchivedMovieType": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/X.MovieType"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "ArchivedAt": {
                                "type": "string",
                                "nullable": true,
                                "format": "date",
                                "example": "2017-04-13"
                            }
                        },
                        "title": "ArchivedMovieType"
                    }
                ]
            },
            "Y.SomeThingType": {
                "type": "object",
                "properties": {
                    "SomeProperty": {
                        "type": "string",
                        "nullable": true
                    },
                    "Contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/X.PersonType"
                        }
                    },
                    "VIPs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/X.FriendType"
                        }
                    }
                },
                "title": "SomeThingType"
            },
            "Y.ChangeTrackingType": {
                "type": "object",
                "properties": {
                    "InlineableStreamProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/odata-definitions.json#/definitions/Edm.PropertyPath"
                        },
                        "description": "Change tracking supports inlining these stream properties"
                    }
                },
                "title": "ChangeTrackingType"
            }
        },
        "parameters": {
            "top": {
                "name": "$top",
                "in": "query",
                "description": "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)",
                "schema": {
                    "type": "integer"
                }
            },
            "skip": {
                "name": "$skip",
                "in": "query",
                "description": "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)",
                "schema": {
                    "type": "integer"
                }
            },
            "count": {
                "name": "$count",
                "in": "query",
                "description": "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)",
                "schema": {
                    "type": "boolean"
                }
            },
            "filter": {
                "name": "$filter",
                "in": "query",
                "description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)",
                "schema": {
                    "type": "string"
                }
            },
            "search": {
                "name": "$search",
                "in": "query",
                "description": "Search items by search phrases, see [OData Searching](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374633)",
                "schema": {
                    "type": "string"
                }
            }
        },
        "responses": {
            "error": {
                "description": "Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/odata.error"
                        }
                    }
                }
            }
        }
    }
}
